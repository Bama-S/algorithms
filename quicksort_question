Question for Algorithms lab - 6-1- 2015 and 9-1-2015 (Note down the question and the corresponding result you get in your lab note-book)
-----------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------

1) Run quicksort.py from http://interactivepython.org/runestone/static/pythonds/SortSearch/TheQuickSort.html and see whether the code works correctly.

2) Understand the logic behind the code.

3) Edit the code such that you get the output partition wise:

 Example: 

Partition1 
-----------
31,26,20,17,44,54,77,55,93

Partition 2
-----------
Left half: 
Right half:


4) How many times the partition function is called for this example?

5) a) Give the input as alist = [1,2,3,4,5,17,20,26,31,44,54,55,77,93]. Check the number of times the partition is called. 
   b) Give the same numbers in reverse order and check again. 
   c) Give the input as alist = [93,5,31,4,54,20,17,26,1,55,2,77,3,20] and check. Do you notice any difference? Why? If you have duplicate numbers, what happens?

6) Use a random function to generate 100,200,300,400 and 500 numbers. Check the number of times the partition function is called. Also, check the time of execution.

Sample code to generate random numbers from 1 to 500 is as follows: 
(You have to use the module called random - see the first line below. Always import statements should be entered at the beginning of your program).

import random 
alist = []
for i in range(0,499):
	x = random.randrange(0,1000)
	alist.append(x)

7) Once you are done with these, proceed to heapsort.

 
